{"version":3,"sources":["firebase/firebaseIndex.js","firebase/authmethods.js","provider/AuthProvider.js","component/Signup.js","component/Signin.js","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","authMethods","email","password","setErrors","setToken","auth","createUserWithEmailAndPassword","then","res","a","Object","entries","user","b","token","localStorage","setItem","console","log","catch","err","prev","message","signInWithEmailAndPassword","window","signOut","removeItem","error","firebaseAuth","React","createContext","AuthProvider","props","useState","inputs","setInputs","errors","Provider","value","handleSignup","handleSignin","handleSignout","children","withRouter","useContext","handleSubmit","e","preventDefault","history","push","handleChange","target","name","onSubmit","onChange","placeholder","length","map","style","color","Signin","className","type","getTodaysDateString","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Home","expenseText","setExpenseText","expenseDate","setExpenseDate","expenseAmount","setExpenseAmount","expenseCat","setExpenseCat","onClick","key","required","pattern","autoComplete","disabled","Comment","TrxDate","CatId","Amount","Number","collection","add","Category","Income","synced","ref","App","exact","path","render","rProps","component","Signup","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6UAcaA,G,MAAcC,IAASC,cAXf,CACfC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,eACnBM,MAAON,+CAMAO,EAAKX,EAAYY,YCZjBC,G,MAEH,SAACC,EAAOC,EAAUC,EAAUC,GAClCjB,EAAYkB,OAAOC,+BAA+BL,EAAMC,GAErDK,KAFH,uCAES,WAAMC,GAAN,eAAAC,EAAA,sEACeC,OAAOC,QAAQH,EAAII,MAAM,GAAG,GAAGC,EAD9C,cACCC,EADD,gBAGCC,aAAaC,QAAQ,QAASF,GAH/B,OAILV,EAASU,GAEPG,QAAQC,IAAIV,GANT,2CAFT,uDAUGW,OAAM,SAAAC,GACLjB,GAAU,SAAAkB,GAAI,4BAASA,GAAT,CAAeD,EAAIE,kBAd5BtB,EAiBH,SAACC,EAAOC,EAAUC,EAAWC,GAEnCjB,EAAYkB,OAAOkB,2BAA2BtB,EAAOC,GAElDK,KAFH,uCAES,WAAMC,GAAN,eAAAC,EAAA,sEACeC,OAAOC,QAAQH,EAAII,MAAM,GAAG,GAAGC,EAD9C,cACCC,EADD,gBAGGC,aAAaC,QAAQ,QAASF,GAHjC,OAMHV,EAASoB,OAAOT,aAAaD,OAN1B,2CAFT,uDAUKK,OAAM,SAAAC,GACLjB,GAAU,SAAAkB,GAAI,4BAASA,GAAT,CAAeD,EAAIE,iBA9B9BtB,EAkCF,SAACG,EAAWC,GAEnBjB,EAAYkB,OAAOoB,UAAUlB,MAAM,SAAAC,GAEjCO,aAAaW,WAAW,SAEtBtB,EAAS,SAEde,OAAM,SAAAC,GAEHjB,GAAU,SAAAkB,GAAI,4BAASA,GAAT,CAAeD,EAAIE,aAE/BP,aAAaW,WAAW,SACtBtB,EAAS,MACPa,QAAQU,MAAMP,EAAIE,aCjDjBM,EAAeC,IAAMC,gBA8CnBC,EA5CM,SAACC,GACpB,IAD8B,EAEFC,mBADV,CAAChC,MAAO,GAAIC,SAAU,KADV,mBAEvBgC,EAFuB,KAEfC,EAFe,OAGFF,mBAAS,IAHP,mBAGvBG,EAHuB,KAGfjC,EAHe,OAIJ8B,mBAAS,MAJL,mBAIvBnB,EAJuB,KAIhBV,EAJgB,KA2B9B,OACE,kBAACwB,EAAaS,SAAd,CACAC,MAAO,CAELC,aAxBiB,WAGnBtB,QAAQC,IAAI,gBAEZlB,EAAmBkC,EAAOjC,MAAOiC,EAAOhC,SAASC,EAAWC,GAC5Da,QAAQC,IAAIkB,EAAQtB,IAmBlB0B,aAjBiB,WAEnBvB,QAAQC,IAAI,oBAEZlB,EAAmBkC,EAAOjC,MAAOiC,EAAOhC,SAAUC,EAAWC,GAC7Da,QAAQC,IAAIkB,EAAQtB,IAalBA,QACAoB,SACAC,YACAC,SACAK,cAdkB,WACpBzC,EAAoBG,EAAWC,MAe5B4B,EAAMU,WCNEC,eAhCA,SAACX,GAAW,IAAD,EAG0BY,qBAAWhB,GAAtDW,EAHiB,EAGjBA,aAAcL,EAHG,EAGHA,OAAQC,EAHL,EAGKA,UAAWC,EAHhB,EAGgBA,OAElCS,EAAY,uCAAG,WAAOC,GAAP,SAAArC,EAAA,6DACnBqC,EAAEC,iBACF9B,QAAQC,IAAI,gBAFO,SAIbqB,IAJa,OAMnBP,EAAMgB,QAAQC,KAAK,KANA,2CAAH,sDAQZC,EAAe,SAAAJ,GAAM,IAAD,EACFA,EAAEK,OAAjBC,EADiB,EACjBA,KAAMd,EADW,EACXA,MACbrB,QAAQC,IAAIgB,GACZC,GAAU,SAAAd,GAAI,kCAASA,GAAT,kBAAgB+B,EAAOd,QAGvC,OACE,0BAAMe,SAAUR,GAAhB,SAIE,2BAAOS,SAAUJ,EAAcE,KAAK,QAAQG,YAAY,QAAQjB,MAAOJ,EAAOjC,QAC9E,2BAAOqD,SAAUJ,EAAcE,KAAK,WAAWG,YAAY,WAAWjB,MAAOJ,EAAOhC,WACpF,0CACCkC,EAAOoB,OAAS,EAAIpB,EAAOqB,KAAI,SAAA9B,GAAK,OAAI,uBAAG+B,MAAO,CAACC,MAAO,QAAShC,MAAe,SCE1EiC,EA9BA,WAAO,IAAD,EAG+BhB,qBAAWhB,GAAtDY,EAHY,EAGZA,aAAcN,EAHF,EAGEA,OAAQC,EAHV,EAGUA,UAAWC,EAHrB,EAGqBA,OAQlCc,EAAe,SAAAJ,GAAM,IAAD,EACFA,EAAEK,OAAjBC,EADiB,EACjBA,KAAMd,EADW,EACXA,MACbrB,QAAQC,IAAIgB,GACZC,GAAU,SAAAd,GAAI,kCAASA,GAAT,kBAAgB+B,EAAOd,QAGvC,OACE,yBAAKuB,UAAU,iBACb,wBAAIA,UAAU,IAAd,UACA,0BAAMA,UAAU,GAAGR,SAfF,SAACP,GACpBA,EAAEC,iBACF9B,QAAQC,IAAI,gBACZsB,MAaI,2BAAOsB,KAAK,QAAQR,SAAUJ,EAAcE,KAAK,QAAQG,YAAY,QAAQjB,MAAOJ,EAAOjC,QAC3F,2BAAO6D,KAAK,WAAWR,SAAUJ,EAAcE,KAAK,WAAWG,YAAY,WAAWjB,MAAOJ,EAAOhC,WACpG,0CACCkC,EAAOoB,OAAS,EAAIpB,EAAOqB,KAAI,SAAA9B,GAAK,OAAI,uBAAG+B,MAAO,CAACC,MAAO,QAAShC,MAAe,QCtB3F,SAASoC,IACP,IAAIC,EAAQ,IAAIC,KACZC,EAAKF,EAAMG,UACXC,EAAKJ,EAAMK,WAAW,EACpBC,EAAON,EAAMO,cAYnB,OAXGL,EAAG,KAEFA,EAAG,IAAD,OAAKA,IAGRE,EAAG,KAEFA,EAAG,IAAD,OAAKA,IAEXJ,EAAK,UAAMM,EAAN,YAAcF,EAAd,YAAoBF,GACzBjD,QAAQC,IAAI8C,GACLA,EAGT,IAyGeQ,EAzGF,SAACxC,GAAW,IAEhBS,EAAkBG,qBAAWhB,GAA7Ba,cAFe,EAGQR,oBAAS,GAHjB,gCAKgBA,mBAAS,KALzB,mBAKfwC,EALe,KAKFC,EALE,OAMgBzC,mBAAS8B,GANzB,mBAMfY,EANe,KAMFC,EANE,OAOoB3C,mBAAS,GAP7B,mBAOf4C,EAPe,KAOAC,EAPA,OAQc7C,mBAAS,WARvB,mBAQf8C,EARe,KAQHC,EARG,KAmDtB,OACE,yBAAKnB,UAAU,OACb,6BACE,4BAAQoB,QAASxC,GAAjB,cAEF,yBAAKoB,UAAU,gBACb,yBAAKA,UAAU,uBACb,4BACEvB,MAAOyC,EACPzB,SAvCqB,SAACR,GAC9BkC,EAAclC,EAAEK,OAAOb,SAZR,CAAC,UAAU,WAAW,aAAa,UAAU,WAAW,YAAa,UAAU,QAAQ,QAAQ,OAAO,gBAoDnGmB,KAAI,SAAEnB,GAAF,OACZ,4BAAQ4C,IAAK5C,EAAOA,MAAOA,GACxBA,OAIP,2BACEwB,KAAK,OACLV,KAAK,cACLd,MAAOqC,EACPQ,UAAQ,EACRC,QAAQ,uBACRC,aAAa,MACb/B,SA5DsB,SAACR,GAC/B8B,EAAe9B,EAAEK,OAAOb,UA6DlB,2BACEwB,KAAK,SACLV,KAAK,gBACLd,MAAOuC,EACPtB,YAAY,SACZ8B,aAAa,MACb/B,SAjEwB,SAACR,GACjCgC,EAAiBhC,EAAEK,OAAOb,UAkEpB,2BACEwB,KAAK,OACLV,KAAK,cACLd,MAAOmC,EACPlB,YAAY,yBACZ8B,aAAa,MACb/B,SA/EsB,SAACR,GAC/B4B,EAAe5B,EAAEK,OAAOb,UAgFlB,4BAAQwB,KAAK,SACXwB,UAAWb,IAAgBI,IAAkBF,EAC7CM,QAtEmB,SAACnC,GAE5B7B,QAAQC,IAAI,CAAEqE,QAASd,EAAae,QAASb,EAAYc,MAAOV,EAAaW,OAAQC,OAAOd,KAG5F/E,EAAG8F,WAAW,gBAAgBC,IAAI,CAChCN,QAASd,EACTe,QAAS,IAAIvB,KAAKU,GAClBmB,SAAUf,EACVW,OAAQC,OAAOd,GACfkB,QAAQ,EACRC,QAAQ,IAETzF,MAAK,SAAS0F,GAEXhF,QAAQC,IAAI,+CAA+C+E,MAE9D9E,OAAM,SAASQ,GACZV,QAAQU,MAAM,2BAA4BA,MAI9C+C,EAAe,MA8CT,UAKU,Q,MCnGLwB,MAjBf,WAAgB,IACNpF,EAAU8B,qBAAWhB,GAArBd,MAER,OADAG,QAAQC,IAAIJ,GAEV,oCAEE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAC,GAAM,OAAc,OAAVxF,EAAiB,kBAAC,EAAD,MAAa,kBAAC,EAAD,SACtE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,UAAUG,UAAW3C,IACvC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,UAAUG,UAAWC,OCP3BC,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MACvB,2D,YCXNC,IAASR,OACT,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGFS,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3G,MAAK,SAAA4G,GACJA,EAAaC,gBAEdjG,OAAM,SAAAQ,GACLV,QAAQU,MAAMA,EAAML,c","file":"static/js/main.222124e5.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n      apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n      authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n      databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n      projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n      storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n      messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n      appId: process.env.REACT_APP_FIREBASE_APP_ID,\n//  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n// Initialize Firebase\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nexport const db = firebaseApp.firestore();\n","import {firebaseApp} from './firebaseIndex'\n//import firebase from 'firebase'\nimport auth from 'firebase/auth'\n\nexport const authMethods = {\n  // firebase helper methods go here... \n  signup: (email, password, setErrors,setToken ) => {\n    firebaseApp.auth().createUserWithEmailAndPassword(email,password) \n      //make res asynchonous so that we can make grab the token before saving it.\n      .then( async res => {\n        const token = await Object.entries(res.user)[5][1].b\n        //set token to localStorage \n        await localStorage.setItem('token', token)\n        setToken(token)\n        //grab token from local storage and set to state. \n          console.log(res)\n      })\n      .catch(err => {\n        setErrors(prev => ([...prev, err.message]))\n      })\n  },\n  signin: (email, password, setErrors, setToken) => {\n    //change from create users to...\n    firebaseApp.auth().signInWithEmailAndPassword(email, password) \n      //everything is almost exactly the same as the function above\n      .then( async res => {\n        const token = await Object.entries(res.user)[5][1].b\n          //set token to localStorage \n          await localStorage.setItem('token', token)\n          \n          \n          setToken(window.localStorage.token)\n        })\n        .catch(err => {\n          setErrors(prev => ([...prev, err.message]))\n        })\n  },\n  //no need for email and password\n  signout: (setErrors, setToken) => {\n      // signOut is a no argument function\n    firebaseApp.auth().signOut().then( res => {\n      //remove the token\n      localStorage.removeItem('token')\n        //set the token back to original state\n        setToken(null)\n  })\n  .catch(err => {\n      //there shouldn't every be an error from firebase but just in case\n      setErrors(prev => ([...prev, err.message]))\n      //whether firebase does the trick or not i want my user to do there thing.\n        localStorage.removeItem('token')\n          setToken(null)\n            console.error(err.message)\n    })\n  },\n}\n","import React, {useState, useEffect} from 'react';\nimport {authMethods} from '../firebase/authmethods'\n\nexport const firebaseAuth = React.createContext()\n\nconst AuthProvider = (props) => {\n  const initState = {email: '', password: ''}\n  const [inputs, setInputs] = useState(initState)\n  const [errors, setErrors] = useState([])\n  const [token, setToken] = useState(null)\n\n\n  const handleSignup = () => {\n\n    // middle man between firebase and signup \n    console.log('handleSignup')\n    // calling signup from firebase server\n    authMethods.signup(inputs.email, inputs.password,setErrors ,setToken )\n    console.log(errors, token)\n  }\n  const handleSignin = () => {\n    //changed to handleSingin\n    console.log('handleSignin!!!!')\n    // made signup signin\n    authMethods.signin(inputs.email, inputs.password, setErrors, setToken)\n    console.log(errors, token)\n  }\n\n  const handleSignout = () => {\n    authMethods.signout(setErrors, setToken)\n  }\n\n  return (\n    <firebaseAuth.Provider\n    value={{\n      //replaced test with handleSignup\n      handleSignup,\n      handleSignin,\n      token,\n      inputs,\n      setInputs,\n      errors,\n      handleSignout,\n    }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;","\n// add useContext\nimport React, {useContext} from 'react';\nimport {firebaseAuth} from '../provider/AuthProvider'\nimport {withRouter} from 'react-router-dom'\n\nconst Signup = (props) => {\n\n\n  const {handleSignup, inputs, setInputs, errors} = useContext(firebaseAuth)\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    console.log('handleSubmit')\n    //wait to signup \n    await handleSignup()\n    //push home\n    props.history.push('/')\n  }\n  const handleChange = e => {\n    const {name, value} = e.target\n    console.log(inputs)\n    setInputs(prev => ({...prev, [name]: value}))\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* replace the div tags with a form tag */}\n      Signup\n      {/* make inputs  */}\n      <input onChange={handleChange} name=\"email\" placeholder='email' value={inputs.email} />\n      <input onChange={handleChange} name=\"password\" placeholder='password' value={inputs.password} />\n      <button>signup</button>\n      {errors.length > 0 ? errors.map(error => <p style={{color: 'red'}}>{error}</p> ) : null}\n    </form>\n  );\n};\n\nexport default withRouter(Signup);","\n// add useContext\nimport React, {useContext} from 'react';\nimport {firebaseAuth} from '../provider/AuthProvider'\n\nconst Signin = () => {\n\n\n  const {handleSignin, inputs, setInputs, errors} = useContext(firebaseAuth)\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('handleSubmit')\n    handleSignin()\n    \n  }\n  const handleChange = e => {\n    const {name, value} = e.target\n    console.log(inputs)\n    setInputs(prev => ({...prev, [name]: value}))\n  }\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"\">Signin</h1>\n      <form className=\"\" onSubmit={handleSubmit}>\n        <input type=\"email\" onChange={handleChange} name=\"email\" placeholder='email' value={inputs.email} />\n        <input type=\"password\" onChange={handleChange} name=\"password\" placeholder='password' value={inputs.password} />\n        <button>signin</button>\n        {errors.length > 0 ? errors.map(error => <p style={{color: 'red'}}>{error}</p> ) : null}\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React, {useContext, useState} from 'react';\nimport {firebaseAuth} from '../provider/AuthProvider'\nimport {db} from '../firebase/firebaseIndex'\n/**\n * Returns todays date as string in format YYYY-MM-DD\n * @return {string}\n */\nfunction getTodaysDateString() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth()+1;\n  const yyyy = today.getFullYear();\n  if(dd<10)\n  {\n      dd=`0${dd}`;\n  }\n\n  if(mm<10)\n  {\n      mm=`0${mm}`;\n  }\n  today = `${yyyy}-${mm}-${dd}`;\n  console.log(today);\n  return today;\n}\n\nconst Home = (props) => {\n\n  const {handleSignout,} = useContext(firebaseAuth)\n  const [loading, setLoading] = useState(true);\n//  const [catitems, setCatItems] = useState([]);\n  const [expenseText, setExpenseText] = useState(\"\");\n  const [expenseDate, setExpenseDate] = useState(getTodaysDateString);\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  const [expenseCat, setExpenseCat] = useState(\"Alcohol\");\n\n  const catitems = [\"Alcohol\",\"Auto Gas\",\"Auto Maint\",\"Camping\",\"Exercise\",\"Grandkids\" ,\"Grocery\",\"House\",\"Lotto\",\"Misc\",\"Prescription\"];\n\n  const handleExpenseTextChange = (e) => {\n    setExpenseText(e.target.value);\n  };\n  const handleExpenseDateChange = (e) => {\n    setExpenseDate(e.target.value);\n  };\n  const handleExpenseAmountChange = (e) => {\n    setExpenseAmount(e.target.value);\n  };\n  const handleExpenseCatChange = (e) => {\n    setExpenseCat(e.target.value);\n  };\n\n  const handleAddTransaction = (e) => {\n    //sendTransaction({ Comment: expenseText, TrxDate: expenseDate,CatId: Number(expenseCat) , Amount: Number(expenseAmount) });\n    console.log({ Comment: expenseText, TrxDate: expenseDate,CatId: expenseCat , Amount: Number(expenseAmount) })\n    // Add a new document in collection \"cities\"\n    //db.collection(\"transactions\").doc().set({\n    db.collection(\"transactions\").add({\n      Comment: expenseText,\n      TrxDate: new Date(expenseDate),\n      Category: expenseCat ,\n      Amount: Number(expenseAmount),\n      Income: false,\n      synced: false\n    })\n    .then(function(ref) {\n        //console.log(\"Document successfully written with TrxDate! \",ref.TrxDate.toDate().toDateString());\n        console.log(\"Document successfully written with TrxDate! \",ref);\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n\n\n    setExpenseText(\"\")\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button onClick={handleSignout}>sign out </button>\n      </div>\n      <div className=\"transactions\">\n        <div className=\"input-group expense\">\n          <select\n            value={expenseCat}\n            onChange={handleExpenseCatChange}\n          >\n            {catitems.map(( value ) => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"date\"\n            name=\"expenseDate\"\n            value={expenseDate}\n            required\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n            autoComplete=\"off\"\n            onChange={handleExpenseDateChange}\n          />\n          <input\n            type=\"number\"\n            name=\"expenseAmount\"\n            value={expenseAmount}\n            placeholder=\"Amount\"\n            autoComplete=\"off\"\n            onChange={handleExpenseAmountChange}\n          />\n          <input\n            type=\"text\"\n            name=\"expenseText\"\n            value={expenseText}\n            placeholder=\"Add Expense Comment...\"\n            autoComplete=\"off\"\n            onChange={handleExpenseTextChange}\n          />\n          <button type=\"submit\"\n            disabled={!expenseText || !expenseAmount || !expenseDate}\n            onClick={handleAddTransaction}\n          >\n            submit\n          </button>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport Signup from './component/Signup'\nimport Signin from './component/Signin'\nimport Home from './component/Home'\nimport './App.css';\nimport {firebaseAuth} from './provider/AuthProvider'\n\nfunction App() {\n  const { token } = useContext(firebaseAuth)\n  console.log(token)\n  return (\n    <>\n    {/* switch allows switching which components render.  */}\n      <Switch>\n        {/* route allows you to render by url path */}\n\n        <Route exact path='/' render={rProps => token === null ? <Signin /> : <Home />} />\n        <Route exact path='/signin' component={Signin} />\n        <Route exact path='/signup' component={Signup} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AuthProvider from './provider/AuthProvider'\nimport {BrowserRouter} from 'react-router-dom'\nReactDOM.render(\n<BrowserRouter>\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}